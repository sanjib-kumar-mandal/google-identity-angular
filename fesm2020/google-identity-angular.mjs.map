{"version":3,"file":"google-identity-angular.mjs","sources":["../../../projects/google-identity-authentication/src/lib/auth-config.ts","../../../projects/google-identity-authentication/src/lib/authentication.service.ts","../../../projects/google-identity-authentication/src/lib/authentication.tag.ts","../../../projects/google-identity-authentication/src/lib/authentication.module.ts","../../../projects/google-identity-authentication/src/index.ts","../../../projects/google-identity-authentication/src/google-identity-angular.ts"],"sourcesContent":["import { Injectable, Provider } from \"@angular/core\";\r\n\r\nexport class AuthConfiguration {\r\n    google_client_id: string | undefined;\r\n    google_button_theme?: GoogleButtonTheme;\r\n    google_options?: GoogleOptions;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport abstract class AuthConfigurationProvider {\r\n  abstract get config(): AuthConfiguration;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DefaultAuthConfiguration extends AuthConfigurationProvider {\r\n  get config(): AuthConfiguration {\r\n    return { \r\n        google_client_id: '',\r\n        google_options: {\r\n            is_one_tap: false,\r\n            is_one_tap_when_button_visible: false\r\n        }\r\n    };\r\n  }\r\n}\r\n\r\nexport class AuthInitialConfiguration {\r\n    config?: Provider;\r\n}\r\n\r\n// interfaces\r\n\r\nexport interface GoogleButtonTheme {\r\n    type?: 'icon' | 'standard';\r\n    theme?: 'outline' | 'filled_blue' | 'filled_black';\r\n    size?: 'large' | 'medium' | 'small';\r\n    text?: 'signin_with' | 'signup_with' | 'continue_with' | 'signin';\r\n    shape?: 'rectangular' | 'pill' | 'circle' | 'square';\r\n    logo_alignment?: 'left' | 'center';\r\n    width?: number;\r\n}\r\n\r\nexport interface GoogleOptions {\r\n    is_one_tap: boolean;\r\n    is_one_tap_when_button_visible: boolean;\r\n}\r\n\r\nexport interface GoogleButtonResponse {\r\n    [key: string]: string;\r\n}","import { Injectable } from '@angular/core';\nimport { AuthConfigurationProvider } from './auth-config';\n\nconst url = 'https://accounts.google.com/gsi/client';\n\ndeclare let google: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationInvoke {\n  \n  // get required references\n  constructor(private authConfigurationProvider: AuthConfigurationProvider) { }\n\n  // load script\n  loadScript(): Promise<any> {\n    return new Promise(async (resolve: any) => {\n      const scriptTags = await document.head.getElementsByTagName('script');\n      for(let i = 0; i < scriptTags.length; i++) {\n        if(scriptTags[i].src === url) {\n          resolve();\n          return;\n        }\n      }\n      const node = document.createElement('script');\n      node.src = url;\n      node.async = true;\n      node.defer = true;\n      node.type = 'text/javascript';\n      document.head.appendChild(node);\n      resolve();\n    });\n  }\n\n  /**\n   * View one tap\n   * @param notification - After opening the prompt you will receive a notification which you canAccess via various methods\n   * @param response - after submitting by the user you can proceed to next step\n   */\n  async viewOneTap(notification: Function, response: Function) {\n    await this.loadScript();\n    if(this.authConfigurationProvider.config.google_options?.is_one_tap) {\n      setTimeout(() => {\n        google.accounts.id.initialize({client_id: this.authConfigurationProvider.config.google_client_id, callback: response });\n        google.accounts.id.prompt((notify: any) => { notification(notify); });\n      }, 100);\n    }\n  }\n\n  /**\n   * You can cancel the One Tap flow if you remove the prompt from the relying party DOM. \n   * The cancel operation is ignored if a credential is already selected.\n   */\n  cancelOneTap() {\n    google.accounts.id.cancel();\n  }\n\n  /**\n   * When the user signs out of your website, \n   * you need to call the method google.accounts.id.disableAutoSelect to record the status in cookies.\n   */\n  disableAutoSelect() {\n    google.accounts.id.disableAutoSelect();\n  }\n\n  /**\n   * This method is a simple wrapper for the store() method of the browser's native credential manager API. \n   * Therefore, it can only be used to store a password credential.\n   * @param credential - any\n   * @param callback - Function\n   */\n  storeCredential(credential: any, callback: Function) {\n    google.accounts.id.storeCredential(credential, callback);\n  }\n\n  /**\n   * This method evokes the OAuth grant used to share the ID token for the specified user.\n   * @param hint - string\n   * @param callback - Function\n   */\n  revoke(hint: string, callback: Function) {\n    google.accounts.id.revoke(hint, (done: any) => { callback(done); });\n  }\n}\n","import { Component, ElementRef, AfterViewInit, ViewChild, Output, EventEmitter, NgZone } from '@angular/core';\nimport { AuthConfigurationProvider, GoogleButtonResponse } from './auth-config';\nimport { AuthenticationInvoke } from './authentication.service';\n\ndeclare const google: any;\n\n@Component({\n  selector: 'google',\n  template: `<div class=\"google-stable-button\"><div class=\"google-button-crust\"><div #button></div></div></div>`,\n  styleUrls: ['./auth-config.scss']\n})\nexport class AuthenticationTag implements AfterViewInit {\n  @ViewChild('button', {read: ElementRef, static: false}) button!: ElementRef;\n  @Output() onResponse = new EventEmitter<any>();\n  constructor( private authConfigurationProvider: AuthConfigurationProvider, private ngZone: NgZone, private authenticationInvoke: AuthenticationInvoke) { }\n  private handleCredentialResponse(event: GoogleButtonResponse) { this.ngZone.run(() => this.onResponse.emit(event)); }\n  async ngAfterViewInit(): Promise<void> {\n    await this.authenticationInvoke.loadScript();\n    setTimeout(() => {\n      google.accounts.id.initialize({client_id: this.authConfigurationProvider.config.google_client_id, callback: this.handleCredentialResponse });\n      google.accounts.id.renderButton(this.button.nativeElement, this.authConfigurationProvider.config.google_button_theme ?? {});\n      if(this.authConfigurationProvider.config.google_options?.is_one_tap_when_button_visible){ google.accounts.id.prompt(); }\n    }, 100);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { AuthenticationTag } from './authentication.tag';\nimport { CommonModule } from '@angular/common';\nimport { AuthConfigurationProvider, AuthInitialConfiguration, DefaultAuthConfiguration } from './auth-config';\n\n@NgModule({\n  declarations: [\n    AuthenticationTag\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AuthenticationTag\n  ]\n})\nexport class GoogleIdentityModule {\n  static init( authConfig: AuthInitialConfiguration): ModuleWithProviders<any> {\n    return {\n      ngModule: GoogleIdentityModule,\n      providers: [\n        authConfig.config || {\n          provide: AuthConfigurationProvider,\n          useClass: DefaultAuthConfiguration\n        }\n      ],\n    };\n  }\n}\n","/*\n * Public API Surface of google-identity-authentication\n */\n\nexport * from './lib/authentication.service';\nexport * from './lib/authentication.tag';\nexport * from './lib/authentication.module';\nexport * from './lib/auth-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1.AuthConfigurationProvider","i2.AuthenticationInvoke"],"mappings":"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"}